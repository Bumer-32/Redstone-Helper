import com.modrinth.minotaur.dependencies.ModDependency

plugins {
	id 'fabric-loom' version '1.5-SNAPSHOT'
	id 'maven-publish'
  	id "org.jetbrains.kotlin.jvm" version "1.9.23"
	id "com.modrinth.minotaur" version "2.+"
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url 'https://maven.wispforest.io' }
}

loom {
    splitEnvironmentSourceSets()

	mods {
		"redstone-helper" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

}

modrinth {
	token = project.hasProperty('modrinthToken') ? project.modrinthToken : System.getenv("MODRINTH_TOKEN")
	projectId = project.id_main
	versionNumber = project.mod_version
	versionName = "Redstone Helper ${project.mod_version})"
	uploadFile = remapJar
	additionalFiles = [remapSourcesJar]
	gameVersions = [project.minecraft_version]
	versionType = project.release_type
	loaders = ["fabric"]
	syncBodyFrom = rootProject.file("README.md").text
	changelog = rootProject.file("CHANGELOG.md").text
	dependencies = [
		new ModDependency(project.id_fabric_api, "required"),
		new ModDependency(project.id_fabric_kotlin, "required"),
		new ModDependency(project.owo_id, "required")
	]
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"

	implementation include("org.mariuszgromada.math:MathParser.org-mXparser:${project.mxparser_version}")

	modImplementation("io.wispforest:owo-lib:${project.owo_version}")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
	kotlinOptions {
		jvmTarget = 17
	}
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}